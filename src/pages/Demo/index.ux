
<import name="tab-content-item" src="./tabitem"></import>
<template>
  <div class="wrapper">
    <tabs @change="onChangeTabIndex">
      <tab-bar class="tab-bar" mode="scrollable">
        <div class="tab-item" for="{{tabList}}">
          <div if="$idx === currentIndex" class="item active">
            <text class="tab-title">{{ $item }}</text>
            <div class="line"></div>
          </div>
          <div else class="item">
            <text class="tab-title">{{ $item }}</text>
            <div class="line"></div>
          </div>
        </div>
      </tab-bar>
      <tab-content class="tab-content">
        <tab-content-item
          for="{{list}}"
          index="{{$idx}}"
          itemdata="{{$item}}"
          current-index="{{currentIndex}}"
          @scrollbottom="getNextPage"
        ></tab-content-item>
      </tab-content>
    </tabs>
  </div>
</template>

<script>
import ajax from '../../helper/ajax.js';
export default {
  private: {
    size: 10,
    url: 'https://wikihow.xiaozuowen.net/categories/',
    currentIndex: 0,
    tabList: ['饮食与休闲', '艺术与娱乐', '健康', '教育与交流', '运动与保健', '旅行', '工作', '家居与园艺'],
    list: [],
  },

  onInit() {
    this.initList();
  },

  initList() {
    this.list = this.tabList.map((e, idx) => {
      return {
        name: e,
        index: idx,
        data: [],
        render: this.currentIndex === idx,
        padding: false,
      }
    })
  },

  onChangeTabIndex(evt) {
    this.currentIndex = evt.index;
    this.list = this.list.map((e, idx) => {
      return Object.assign({}, e, {
        render: this.currentIndex === idx,
        data: this.currentIndex === idx ? e.data : [],
      })
    })
    if (this.list[this.currentIndex].data.length === 0) {
      this.getNextPage();
    }
  },
  getNextPage() {
    let url = `${this.url}${this.tabList[this.currentIndex]}`;
    let params = {
      size: this.size,
      offset: this.list[this.currentIndex].data.length,
    }
    this.list[this.currentIndex].padding = true;
    ajax.get(url, params).then(res => {
      let list = res.list;
      let tabData = {
        ...this.list[this.currentIndex],
        data: [...this.list[this.currentIndex].data, ...list],
        padding: false,
      }
      this.list.splice(this.currentIndex, 1, tabData);
    })
  }
}
</script>

<style lang="scss">
@import './../../assets/styles/style.scss';

.wrapper {
  @include flex-box-mixins(column, center, center);
  .tab-bar {
    .tab-item {
      padding: 0 16px;
      .item {
        flex-direction: column;
        .tab-title {
          color: #333;
          margin-bottom: 4px;
        }
        .line {
          width: 100%;
          height: 4px;
          border-radius: 2px;
          background-color: #fff;
        }
      }
      .active {
        .tab-title {
          font-weight: bold;
          color: $def-purple;
        }
        .line {
          background-color: $def-purple;
        }
      }
    }
  }
}
</style>
